{"version":3,"sources":["NewsCard.js","NewsPage.js","VideoPage.js","HomePage.js","StockPage.js","App.js","serviceWorker.js","index.js"],"names":["NewsCard","props","Card","style","width","Body","Title","name","Text","data","map","item","target","rel","href","url","NewsPage","useState","newsSource","setNewsSource","dailyRead","setDailyRead","hackerNews","setHackerNews","huxiu","setHuxiu","kr","mit","c","dest_url","process","useEffect","Axios","get","then","index","get_list","Promise","all","values","result","rs","push","id","entity","date","columns","dataField","text","formatter","cell","row","Container","Row","Col","keyField","sort","a","b","localeCompare","VideoPage","HomePage","StockPage","allStock","setAllStock","stockData","setStockData","pending","setPending","_","buy","stock_type","stock_data","tmp_result","close_price","ma20","ma5","max_price","Math","max","min_price","min","console","log","height","type","dataKey","stroke","domain","length","toFixed","Spinner","animation","App","className","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","as","to","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9295b0bd.chunk.js","sourcesContent":["import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\n\nexport default function NewsCard(props) {\n  return (\n    <Card style={{ width: \"18rem\" }}>\n      <Card.Body>\n        <Card.Title>{props.name}</Card.Title>\n        <Card.Text>\n  {props.data.map((item)=>{return (<><a target=\"_blank\" rel=\"noopener noreferrer\" href={item.url}>{item.name}</a><br/></>);})}\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport NewsCard from \"./NewsCard\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nexport default function NewsPage() {\n  const [newsSource, setNewsSource] = useState([]);\n  const [dailyRead, setDailyRead] = useState([]);\n  const [hackerNews, setHackerNews] = useState([]);\n  const [huxiu, setHuxiu] = useState([]);\n  const [kr, set36kr] = useState([]);\n  const [mit, setMIT] = useState([]);\n  const [c] = useState(0);\n  const dest_url = (process.env.REACT_APP_IP??\"127.0.0.1\")+\":\"+(process.env.REACT_APP_PORT??\"538\");\n\n  useEffect(() => {\n    Axios.get(\n      `http://${dest_url}/source?file=news`\n    ).then((data) => {\n      setNewsSource(\n        data.data.data.map((item, index) => {\n          return item.name;\n        })\n      );\n    });\n  }, [c]);\n  useEffect(() => {\n    const get_list = ['hacker_news','huxiu','36kr','MIT'].map((item) => {\n        return Axios.get(\n          `http://${dest_url}/rss?name=${item}`\n        );\n      });\n      Promise.all(get_list)\n      .then((values) => {\n      setHackerNews(\n        values[0].data.data.map((item, index) => {\n          return {name:item.name,url:item.url};\n        })\n      );\n      setHuxiu(\n        values[1].data.data.map((item, index) => {\n          return {name:item.name,url:item.url};\n        })\n      );\n    });\n  }, [c]);\n  useEffect(() => {\n    const get_list = newsSource.map((item) => {\n      return Axios.get(\n        `http://${dest_url}/daily_read?entity=${item}&daily_read_date=3`\n      );\n    });\n    var index = 0;\n    // load data\n    Promise.all(get_list)\n      .then((values) => {\n        var result = [];\n        values.map((rs) => {\n          const read_item = rs.data.data;\n\n          read_item.map((item) => {\n            result.push({\n              id: index,\n              name: item.entity,\n              date: item.date,\n              url: item.url,\n              name: item.name,\n            });\n            index += 1;\n          });\n        });\n\n        setDailyRead(result);\n      })\n  }, [newsSource]);\n  const columns = [\n    {\n      dataField: \"id\",\n      text: \"ID\",\n    },\n    {\n      dataField: \"name\",\n      text: \"Name\",\n    formatter:(cell,row)=>{return <a href={row.url} target=\"_blank\" rel=\"noopener noreferrer\">{row.name}</a>}\n    },\n    {\n      dataField: \"date\",\n      text: \"DATE\",\n    }\n  ];\n  return <>\n  <Container>\n  <Row>\n    <Col><NewsCard data={hackerNews} name=\"hacker news\"/>\n  </Col>\n    <Col><NewsCard data={huxiu} name=\"虎嗅\"/></Col>\n    <Col><NewsCard data={kr} name=\"36kr\"/>\n  </Col>\n  <Col><NewsCard data={mit} name=\"MIT\"/>\n  </Col>\n  </Row>\n  <Row>\n    <Col><BootstrapTable keyField=\"id\" data={dailyRead.sort((a,b)=>{return b.date.localeCompare(a.date)})} columns={columns} /></Col>\n    \n  </Row>\n</Container>\n  \n  </>;\n}\n","import React from \"react\";\nexport default function VideoPage() {\n    return \"hello world\";\n}","import React from \"react\";\nexport default function HomePage() {\n    return \"hello world\";\n}","import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  ResponsiveContainer,\n} from \"recharts\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nexport default function StockPage() {\n  const [allStock, setAllStock] = useState([]);\n  const [stockData, setStockData] = useState([]);\n  const [pending, setPending] = useState(true);\n  const [c] = useState(0);\n  const dest_url =\n    (process.env.REACT_APP_IP ?? \"127.0.0.1\") +\n    \":\" +\n    (process.env.REACT_APP_PORT ?? \"538\");\n\n  useEffect(() => {\n    Axios.get(`http://${dest_url}/stock?stock_type=all`).then((data) => {\n      setAllStock(\n        data.data.data.map((item, _) => {\n          return {\n            name: item.name,\n            buy: item.buy,\n            stock_type: item.stock_type,\n          };\n        })\n      );\n    });\n  }, [c]);\n  useEffect(() => {\n    const get_list = allStock.map((item) => {\n      return Axios.get(\n        `http://${dest_url}/stock_data?name=${item.name}&stock_date=30`\n      );\n    });\n\n    // load data\n    Promise.all(get_list).then((values) => {\n      var result = [];\n      values.map((rs) => {\n        const stock_data = rs.data.data;\n        var tmp_result = [];\n        stock_data.map((item) => {\n            tmp_result.push({\n            close_price: item.close_price,\n            date: item.date,\n            ma20: item.ma20,\n            ma5: item.ma5,\n            name: item.name,\n            //buy: allStock[index].buy,\n            //stock_type: allStock[index].stock_type,\n            max_price : Math.max(item.close_price)+10,\n            min_price : Math.min(item.close_price)-10\n          });\n         \n        });\n        result.push(tmp_result.sort((a,b)=>{return a.date.localeCompare(b.date);}));\n      });\n      setPending(false);\n      setStockData(result);\n      console.log(result);\n    });\n  }, [allStock]);\n  const columns = [\n    {\n      dataField: \"name\",\n      text: \"Name\",\n      formatter: (cell, row) => {return row[0].name;}\n    },\n    {\n      dataField: \"close_price\",\n      text: \"Picture\",\n      formatter: (cell, row) => {\n        return (\n            <LineChart width={500} height={100} data={row}>\n            <Line type=\"monotone\" dataKey=\"ma5\" stroke=\"#de1d10\" />\n            <Line type=\"monotone\" dataKey=\"ma20\" stroke=\"#0b91de\" />\n            <Line type=\"monotone\" dataKey=\"close_price\" stroke=\"#232224\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis domain={[row.min_price, row.max_price]} />\n          </LineChart>\n        );\n      },\n    },\n    {\n        dataField: \"ma5\",\n        text: \"MA5\",\n        formatter: (cell, row) => {return row[row.length-1].ma5.toFixed(2);;}\n      },\n      {\n        dataField: \"ma20\",\n        text: \"MA20\",\n        formatter: (cell, row) => {return row[row.length-1].ma20.toFixed(2);;}\n      },\n      {\n        dataField: \"close price\",\n        text: \"Close price\",\n        formatter: (cell, row) => {return row[row.length-1].close_price;}\n      },\n      {\n        dataField: \"suggestion\",\n        text: \"建议\",\n        formatter: (cell, row) => {return row[row.length-1].ma5>row[row.length-1].ma20?\"买\":\"卖\";}\n      },\n  ];\n  return pending === true ? (\n    <Spinner animation=\"border\" />\n  ) : (\n    <BootstrapTable keyField=\"id\" data={stockData} columns={columns} />\n  );\n}\n","import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NewsPage from \"./NewsPage\";\nimport VideoPage from \"./VideoPage\";\nimport HomePage from \"./HomePage\";\nimport StockPage from \"./StockPage\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <div>\n          <nav>\n          <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand href=\"/\">Daily Read</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto\">\n              <Nav.Link as={Link} to=\"/\" >Home</Nav.Link>\n              <Nav.Link as={Link} to=\"/news\" >News</Nav.Link>\n              <Nav.Link as={Link} to=\"/video\" >Video</Nav.Link>\n              <Nav.Link as={Link} to=\"/stock\" >Stock</Nav.Link>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n          </nav>\n          \n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/news\">\n              <NewsPage />\n            </Route>\n            <Route path=\"/video\">\n              <VideoPage />\n            </Route>\n            <Route path=\"/stock\">\n              <StockPage />\n            </Route>\n            <Route path=\"/\">\n              <HomePage />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}